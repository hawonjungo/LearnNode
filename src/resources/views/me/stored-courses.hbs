<form method="POST" name="container-form" class="mt-4" action="/courses/handle-form-action">
  <div>
    <h3>My Respository</h3>
    {{! hbs display Bin with IF }}
    {{#if deletedCount}}
      <a href="/me/trash/courses">Bin ({{deletedCount}})</a>
    {{/if}}

    <div class="mt-4 d-flex align-items-center">
      <div class="form-check">
        <input
          class="form-check-input"
          type="checkbox"
          value=""
          id="checkbox-all"
        />
        <label class="form-check-label" for="checkbox-all">
          Select all
        </label>
      </div>
      <select class="form-select select-all-options" name="action" required>
        <option value="">-- Select action</option>
        <option value="delete">Delete</option>
      </select>
      <button
        class="btn btn-primary btn-sm disabled"
        id="btn-apply-check"
      >Apply</button>
    </div>
  </form>
  <table class="table mt-4">
    <thead>
      <tr>
        <th scope="col" colspan="2">#</th>
        {{!-- href sort with column name, type and push to helper --}}
        <th scope="col">Name {{{sortable "name" _sort}}} </th>
        <th scope="col">Cute {{{sortable "cute" _sort}}}</th>
        <th scope="col">Date created {{{sortable "createdAt" _sort}}}</th>
        {{! <th scope="col" colspan="2">Date created</th> }}
        <th scope="col"></th>
      </tr>
    </thead>
    <tbody>
      {{#each courses}}
        <tr>
          <td>
            <div class="form-check">
              <input
                class="form-check-input"
                type="checkbox"
                name="courseIds[]"
                value="{{this._id}}"
              />

            </div>
          </td>
          {{! sum from helper function- using for express-hbs library }}
          <th scope="row">{{sum @index 1}}</th>
          <td>{{this.name}}</td>
          <td>{{this.cute}}</td>
          <td>{{this.createdAt}}</td>
          <td>
            <a href="/courses/{{this._id}}/edit" class="btn btn-link">Edit</a>
            <a
              href=""
              class="btn btn-link"
              data-bs-toggle="modal"
              {{! send _id to button }}
              data-id="{{this._id}}"
              data-bs-target="#delete-repository-modal"
            >Delete</a>
          </td>
        </tr>

      {{else}}
        <tr>
          <td colspan="5" class="text-center">
            Repositories are empty.
            <a href="/courses/create">Create Respository</a></td>
        </tr>
      {{/each}}
    </tbody>
  </table>
</div>

{{! Confirm delete repository }}
<!-- Modal -->
<div
  class="modal fade"
  id="delete-repository-modal"
  tabindex="-1"
  aria-labelledby="ModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="ModalLabel">Delete Repository</h1>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        Do you want to delete this repository?
      </div>
      <div class="modal-footer">
        <button
          type="button"
          class="btn btn-secondary"
          data-bs-dismiss="modal"
        >Close</button>
        <button
          id="btn-delete-repository"
          type="button"
          class="btn btn-danger"
        >Delete</button>
      </div>
    </div>
  </div>
</div>

{{! Delete hidden form for "submit" }}
<form name="delete-form" method="POST">
</form>

{{! add jQuery }}
<script
  src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"
></script>

{{!--prettier-ignore--}}
<script>
  let repositoryId;
  let deleteForm = document.forms["delete-form"]; 
  let containerForm = document.forms["container-form"]; 
  let deleteRepository = document.getElementById('delete-repository-modal');
  let checkboxAll = $("#checkbox-all")
  let repoItemCheckbox = $('input[name="courseIds[]"]')
  let checkAllApply = $("#btn-apply-check")
  
  deleteRepository.addEventListener('show.bs.modal', event => {
    const button =  event.relatedTarget; 
    repositoryId = button.getAttribute('data-id');
  }); 
  const btnDeleteRepository = document.getElementById("btn-delete-repository");
  btnDeleteRepository.onclick = function(){ 
    deleteForm.action="/courses/"+ repositoryId +"?_method=DELETE";
    deleteForm.submit() 
  }

  //when checkbox all change
  checkboxAll.change(function(){
    let isCheckedAll = $(this).prop("checked")
    //if(isCheckedAll){
    //  repoItemCheckbox.prop("checked", true)
    //}
    //else{
    //   repoItemCheckbox.prop("checked", false)
    //}
    repoItemCheckbox.prop("checked",isCheckedAll)
    renderCheckAllApplyBtn();
  })
  //repo item change
  repoItemCheckbox.change(function(){
    //compare between checkbox length and checkbox checked length
   let isCheckedAll = repoItemCheckbox.length === $('input[name="courseIds[]"]:checked').length;
  // set value of checkboxAll with ischeckedAll
  checkboxAll.prop("checked",isCheckedAll)
    renderCheckAllApplyBtn();
  })



  // Check all submit button 
  checkAllApply.on("submit",function(e){
     // check with jq by func hasClass or nah
    var isSubmittalbe = !$(this).hasClass("disabled")
    if(isSubmittalbe){
      e.preventDefault()
    }
  })


  // rerender check all apply btn
  function renderCheckAllApplyBtn(){
    var checkedCount = $('input[name="courseIds[]"]:checked').length;
    // if checkedCount > 0
    if(checkedCount){
      checkAllApply.removeClass("disabled")
    }else{
      checkAllApply.addClass("disabled")
    }
  }



</script>